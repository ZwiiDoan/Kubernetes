apiVersion: v1
kind: Pod
metadata:
  name: random-number-generator
spec:
  containers:
  - image: alpine
    name: alpine
    command: ["/bin/sh", "-c"]
    args: ["shuf -i 0-100 -n 1 >> /opt/number.out;"]
    volumeMounts:
    - mounthPath: /opt
      name: data-volume
  volumes:
  - name: data-volume
#    hostPath: <- Not recommended as it will create the path on every node and assume that all nodes are same
#      path: /data
#      tyoe: Directory
    awsElasticBlockStore:
      volumeID: <volume-id>
      fsType: ext4

# Persistent Volumes
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-vol1
spec:
  accessModes:
  - ReadWriteOnce # ReadOnlyMany, ReadWriteMany
  capacity:
    storage: 1Gi
#  hostPath:
#    path: /tmp/data
  awsElasticBlockStore:
    volumeID: <volume-id>
    fsType: ext4
---
kubectl create -f 
kubectl get persistentvolumes

# Persistent Volume Claims
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: myclaim
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 500Mi
  persistentVolumeReclaimPolicy: Recycle #Default is Retain, other options are Delete
---
kubectl get persistentvolumeclaims
kubectl delete persistentvolumeclaims myclaim

# Using PVCs in PODs, ReplicaSets, Deployments
kind: Pod
spec:
  volumes:
  - name: mypd
    persistentVolumeClaim:
      claimName: myClaim