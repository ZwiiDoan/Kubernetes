apiVersion: v1
kind: Pod
metadata:
  name: random-number-generator
spec:
  containers:
  - image: alpine
    name: alpine
    command: ["/bin/sh", "-c"]
    args: ["shuf -i 0-100 -n 1 >> /opt/number.out;"]
    volumeMounts:
    - mounthPath: /opt
      name: data-volume
  volumes:
  - name: data-volume
#    hostPath: <- Not recommended as it will create the path on every node and assume that all nodes are same
#      path: /data
#      tyoe: Directory
    awsElasticBlockStore:
      volumeID: <volume-id>
      fsType: ext4

# Persistent Volumes
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-vol1
spec:
  accessModes:
  - ReadWriteOnce # ReadOnlyMany, ReadWriteMany
  capacity:
    storage: 1Gi
#  hostPath:
#    path: /tmp/data
  awsElasticBlockStore:
    volumeID: <volume-id>
    fsType: ext4
---
kubectl create -f 
kubectl get persistentvolumes

# Persistent Volume Claims
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: myclaim
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 500Mi
  persistentVolumeReclaimPolicy: Recycle #Default is Retain, other options are Delete
---
kubectl get persistentvolumeclaims
kubectl delete persistentvolumeclaims myclaim

# Using PVCs in PODs, ReplicaSets, Deployments
kind: Pod
spec:
  volumes:
  - name: mypd
    persistentVolumeClaim:
      claimName: myClaim

# emptyDir
An emptyDir volume is first created when a Pod is assigned to a Node, and exists as long as that Pod is running on that node. 
As the name says, it is initially empty. Containers in the Pod can all read and write the same files in the emptyDir volume, 
though that volume can be mounted at the same or different paths in each Container. When a Pod is removed from a node for any reason, 
the data in the emptyDir is deleted forever.
volumes:
  - name: data-volume
    emptyDir: {}